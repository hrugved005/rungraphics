#include <stdio.h>
#include <graphics.h>
#include <math.h>

// DDA Line Drawing Algorithm
void drawLineDDA(int x0, int y0, int x1, int y1) {
    int dx = x1 - x0;
    int dy = y1 - y0;
    
    int steps = abs(dx) > abs(dy) ? abs(dx) : abs(dy);  // Calculate the number of steps
    
    float xIncrement = dx / (float) steps;
    float yIncrement = dy / (float) steps;
    
    float x = x0;
    float y = y0;
    
    // Draw the initial point
    putpixel(round(x), round(y), WHITE);
    
    for (int i = 0; i < steps; i++) {
        x += xIncrement;
        y += yIncrement;
        putpixel(round(x), round(y), WHITE);  // Plot the points
    }
}

// Polygon Drawing Algorithm using DDA for each edge
void drawPolygonDDA(int vertices[][2], int n) {
    for (int i = 0; i < n - 1; i++) {
        // Draw a line between consecutive vertices
        drawLineDDA(vertices[i][0], vertices[i][1], vertices[i + 1][0], vertices[i + 1][1]);
    }
    // Close the polygon by connecting the last vertex to the first vertex
    drawLineDDA(vertices[n - 1][0], vertices[n - 1][1], vertices[0][0], vertices[0][1]);
}

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "");  // Initialize graphics mode
    
    int n;  // Number of vertices
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    
    int vertices[n][2];  // Array to hold the coordinates of the vertices
    
    // Input the vertices
    printf("Enter the coordinates of the vertices (x y):\n");
    for (int i = 0; i < n; i++) {
        scanf("%d %d", &vertices[i][0], &vertices[i][1]);
    }
    
    // Draw the polygon
    drawPolygonDDA(vertices, n);
    
    getch();  // Wait for key press
    closegraph();  // Close the graphics window
    return 0;
}
