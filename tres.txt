#include <stdio.h>
#include <math.h>

// Function to plot points in all eight octants
void plotCirclePoints(int xc, int yc, int x, int y) {
    printf("Plotting points: (%d, %d), (%d, %d), (%d, %d), (%d, %d), (%d, %d), (%d, %d), (%d, %d), (%d, %d)\n",
        xc + x, yc + y, xc - x, yc + y, xc + x, yc - y, xc - x, yc - y,
        xc + y, yc + x, xc - y, yc + x, xc + y, yc - x, xc - y, yc - x);
}

// Midpoint Circle Drawing Algorithm
void drawCircle(int xc, int yc, int r) {
    int x = 0;
    int y = r;
    int p = 1 - r;  // Initial decision parameter

    // Initial points at the top of the circle
    plotCirclePoints(xc, yc, x, y);

    // Loop to plot points in one octant and mirror to other octants
    while (x < y) {
        x++;

        if (p < 0) {
            // Midpoint is inside the circle, choose horizontal pixel
            p = p + 2 * x + 1;
        } else {
            // Midpoint is outside the circle, choose diagonal pixel
            y--;
            p = p + 2 * (x - y) + 1;
        }

        // Plot the points for this step
        plotCirclePoints(xc, yc, x, y);
    }
}

int main() {
    int xc, yc, r;
    
    // Input the center and radius of the circle
    printf("Enter the coordinates of the center (xc, yc): ");
    scanf("%d %d", &xc, &yc);
    printf("Enter the radius of the circle (r): ");
    scanf("%d", &r);
    
    // Draw the circle
    drawCircle(xc, yc, r);
    
    return 0;
}
